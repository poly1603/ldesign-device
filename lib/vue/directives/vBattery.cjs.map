{"version":3,"file":"vBattery.cjs","sources":["../../../src/vue/directives/vBattery.ts"],"sourcesContent":["import type { Directive, DirectiveBinding } from 'vue'\r\nimport type { BatteryInfo, BatteryModule } from '../../types'\r\nimport { DeviceDetector } from '../../core/DeviceDetector'\r\n\r\ninterface ElementWithBatteryData extends HTMLElement {\r\n  __batteryChangeHandler?: (batteryInfo: BatteryInfo) => void\r\n  __deviceDetector?: DeviceDetector\r\n  __lastBatteryState?: string\r\n  __isVisible?: boolean\r\n  __directiveBinding?: DirectiveBinding<BatteryCondition | BatteryDirectiveValue>\r\n}\r\n\r\ntype BatteryCondition = 'charging' | 'low' | 'critical' | 'full'\r\n\r\ninterface BatteryDirectiveValue {\r\n  condition: BatteryCondition | BatteryCondition[]\r\n  threshold?: number // 用于 low/critical 条件的阈值\r\n  inverse?: boolean\r\n  callback?: (batteryInfo: BatteryInfo) => void\r\n}\r\n\r\n// 全局设备检测器实例\r\nlet globalDetector: DeviceDetector | null = null\r\nlet elementCount = 0\r\n\r\n// 性能优化：批量更新队列\r\nconst updateQueue: Set<ElementWithBatteryData> = new Set()\r\nlet isUpdateScheduled = false\r\n\r\n/**\r\n * 获取全局设备检测器实例\r\n */\r\nfunction getGlobalDetector(): DeviceDetector {\r\n  if (!globalDetector) {\r\n    globalDetector = new DeviceDetector({\r\n      modules: ['battery'],\r\n    })\r\n\r\n    // 初始化电池模块\r\n    globalDetector.loadModule<import('../../types').BatteryModule>('battery').catch((error) => {\r\n      console.warn('Failed to load battery module:', error)\r\n    })\r\n  }\r\n  return globalDetector\r\n}\r\n\r\n/**\r\n * 调度批量更新\r\n */\r\nfunction scheduleUpdate(): void {\r\n  if (isUpdateScheduled || updateQueue.size === 0) {\r\n    return\r\n  }\r\n\r\n  isUpdateScheduled = true\r\n  requestAnimationFrame(() => {\r\n    const elementsToUpdate = Array.from(updateQueue)\r\n    updateQueue.clear()\r\n    isUpdateScheduled = false\r\n\r\n    elementsToUpdate.forEach(async (element) => {\r\n      if (element.isConnected && element.__directiveBinding) {\r\n        const detector = getGlobalDetector()\r\n        try {\r\n          const batteryModule = await detector.loadModule<BatteryModule>('battery')\r\n          if (batteryModule && typeof batteryModule.getData === 'function') {\r\n            const batteryInfo = batteryModule.getData()\r\n            updateElementVisibility(element, element.__directiveBinding, batteryInfo)\r\n          }\r\n        }\n        catch (error) {\r\n          console.warn('Failed to get battery info:', error)\r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * 解析指令绑定值\r\n */\r\nfunction parseDirectiveValue(value: BatteryCondition | BatteryDirectiveValue): {\r\n  conditions: BatteryCondition[]\r\n  threshold: number\r\n  inverse: boolean\r\n  callback?: (batteryInfo: BatteryInfo) => void\r\n} {\r\n  if (typeof value === 'string') {\r\n    return {\r\n      conditions: [value],\r\n      threshold: 0.2, // 默认低电量阈值 20%\r\n      inverse: false,\r\n    }\r\n  }\r\n\r\n  if (typeof value === 'object' && value !== null) {\r\n    const conditions = Array.isArray(value.condition) ? value.condition : [value.condition]\r\n    return {\r\n      conditions,\r\n      threshold: value.threshold || 0.2,\r\n      inverse: value.inverse || false,\r\n      callback: value.callback,\r\n    }\r\n  }\r\n\r\n  return {\r\n    conditions: [],\r\n    threshold: 0.2,\r\n    inverse: false,\r\n  }\r\n}\r\n\r\n/**\r\n * 检查电池条件是否满足\r\n */\r\nfunction checkBatteryCondition(\r\n  batteryInfo: BatteryInfo,\r\n  condition: BatteryCondition,\r\n  threshold: number,\r\n): boolean {\r\n  switch (condition) {\r\n    case 'charging':\r\n      return batteryInfo.charging\r\n    case 'low':\r\n      return batteryInfo.level <= threshold && batteryInfo.level > 0.1\r\n    case 'critical':\r\n      return batteryInfo.level <= 0.1\r\n    case 'full':\r\n      return batteryInfo.level >= 0.95\r\n    default:\r\n      return false\r\n  }\r\n}\r\n\r\n/**\r\n * 检查是否应该显示元素\r\n */\r\nfunction shouldShowElement(\r\n  batteryInfo: BatteryInfo,\r\n  conditions: BatteryCondition[],\r\n  threshold: number,\r\n  inverse: boolean,\r\n): boolean {\r\n  const matches = conditions.some(condition =>\r\n    checkBatteryCondition(batteryInfo, condition, threshold),\r\n  )\r\n  return inverse ? !matches : matches\r\n}\r\n\r\n/**\r\n * 获取电池状态字符串\r\n */\r\nfunction getBatteryState(batteryInfo: BatteryInfo, threshold: number): string {\r\n  const states = []\r\n  if (batteryInfo.charging)\n    states.push('charging')\r\n  if (batteryInfo.level <= 0.1)\n    states.push('critical')\r\n  else if (batteryInfo.level <= threshold)\n    states.push('low')\r\n  if (batteryInfo.level >= 0.95)\n    states.push('full')\r\n  return states.join('-') || 'normal'\r\n}\r\n\r\n/**\r\n * 更新元素显示状态\r\n */\r\nfunction updateElementVisibility(\r\n  el: ElementWithBatteryData,\r\n  binding: DirectiveBinding<BatteryCondition | BatteryDirectiveValue>,\r\n  batteryInfo: BatteryInfo,\r\n) {\r\n  const { conditions, threshold, inverse, callback } = parseDirectiveValue(binding.value)\r\n  const currentState = getBatteryState(batteryInfo, threshold)\r\n\r\n  // 性能优化：避免重复计算\r\n  if (el.__lastBatteryState === currentState) {\r\n    return\r\n  }\r\n\r\n  el.__lastBatteryState = currentState\r\n  const shouldShow = shouldShowElement(batteryInfo, conditions, threshold, inverse)\r\n\r\n  // 执行回调函数\r\n  if (callback && typeof callback === 'function') {\r\n    callback(batteryInfo)\r\n  }\r\n\r\n  // 性能优化：只在可见性真正改变时更新 DOM\r\n  if (el.__isVisible !== shouldShow) {\r\n    el.__isVisible = shouldShow\r\n\r\n    if (shouldShow) {\r\n      // 显示元素\r\n      if (el.style.display === 'none') {\r\n        el.style.display = el.dataset.originalDisplay || ''\r\n      }\r\n      el.removeAttribute('hidden')\r\n      el.classList.add('battery-visible')\r\n      el.classList.remove('battery-hidden')\r\n    }\r\n    else {\r\n      // 隐藏元素\r\n      if (!el.dataset.originalDisplay) {\r\n        el.dataset.originalDisplay = el.style.display || ''\r\n      }\r\n      el.style.display = 'none'\r\n      el.setAttribute('hidden', '')\r\n      el.classList.add('battery-hidden')\r\n      el.classList.remove('battery-visible')\r\n    }\r\n\r\n    // 添加电池状态相关的 CSS 类\r\n    el.classList.remove('battery-charging', 'battery-low', 'battery-critical', 'battery-full', 'battery-normal')\r\n    currentState.split('-').forEach((state) => {\r\n      el.classList.add(`battery-${state}`)\r\n    })\r\n\r\n    // 添加电量百分比相关的 CSS 类\r\n    const levelClass = `battery-level-${Math.floor(batteryInfo.level * 10) * 10}`\r\n    el.classList.remove(...Array.from(el.classList).filter(cls => cls.startsWith('battery-level-')))\r\n    el.classList.add(levelClass)\r\n  }\r\n}\r\n\r\n/**\r\n * v-battery 指令实现\r\n *\r\n * 根据电池状态控制元素的显示和隐藏\r\n *\r\n * @example\r\n * ```vue\r\n * <!-- 充电时显示 -->\r\n * <div v-battery=\"'charging'\">正在充电</div>\r\n *\r\n * <!-- 低电量时显示 -->\r\n * <div v-battery=\"'low'\">电量不足</div>\r\n *\r\n * <!-- 自定义低电量阈值 -->\r\n * <div v-battery=\"{ condition: 'low', threshold: 0.3 }\">\r\n *   电量低于30%\r\n * </div>\r\n *\r\n * <!-- 带回调函数 -->\r\n * <div v-battery=\"{\r\n *   condition: 'charging',\r\n *   callback: (battery) => \r\n * }\">\r\n *   充电中\r\n * </div>\r\n * ```\r\n */\r\nexport const vBattery: Directive<HTMLElement, BatteryCondition | BatteryDirectiveValue> = {\r\n  async mounted(el, binding) {\r\n    const detector = getGlobalDetector()\r\n    const elementWithData = el as ElementWithBatteryData\r\n\r\n    // 增加元素计数\r\n    elementCount++\r\n\r\n    // 初始化元素状态\r\n    elementWithData.__lastBatteryState = undefined\r\n    elementWithData.__isVisible = undefined\r\n    elementWithData.__directiveBinding = binding\r\n\r\n    try {\r\n      // 加载电池模块并获取初始状态\r\n      const batteryModule = await detector.loadModule<BatteryModule>('battery')\r\n      if (batteryModule && typeof batteryModule.getData === 'function') {\r\n        const batteryInfo = batteryModule.getData()\r\n        updateElementVisibility(elementWithData, binding, batteryInfo)\r\n\r\n        // 监听电池变化\r\n        const handleBatteryChange = () => {\r\n          updateQueue.add(elementWithData)\r\n          scheduleUpdate()\r\n        }\r\n\r\n        // 如果电池模块支持事件监听\r\n        const maybeOn = (batteryModule as any).on as ((...args: any[]) => any) | undefined\r\n        if (typeof maybeOn === 'function') {\r\n          maybeOn.call(batteryModule, 'batteryChange', handleBatteryChange)\r\n          elementWithData.__batteryChangeHandler = handleBatteryChange\r\n        }\r\n\r\n        elementWithData.__deviceDetector = detector\r\n      }\r\n    }\n    catch (error) {\r\n      console.warn('Failed to initialize battery directive:', error)\r\n    }\r\n  },\r\n\r\n  updated(el, binding) {\r\n    const elementWithData = el as ElementWithBatteryData\r\n    const detector = elementWithData.__deviceDetector\r\n\r\n    // 更新 binding 引用\r\n    elementWithData.__directiveBinding = binding\r\n\r\n    if (detector) {\r\n      detector.loadModule('battery').then((batteryModule) => {\r\n        if (batteryModule && typeof batteryModule.getData === 'function') {\r\n          const batteryInfo = batteryModule.getData() as BatteryInfo\r\n          if (batteryInfo) {\r\n            updateElementVisibility(elementWithData, binding, batteryInfo)\r\n          }\r\n        }\r\n      }).catch((error) => {\r\n        console.warn('Failed to update battery directive:', error)\r\n      })\r\n    }\r\n  },\r\n\r\n  unmounted(el) {\r\n    const elementWithData = el as ElementWithBatteryData\r\n    const detector = elementWithData.__deviceDetector\r\n    const handler = elementWithData.__batteryChangeHandler\r\n\r\n    // 减少元素计数\r\n    elementCount--\r\n\r\n    // 从更新队列中移除\r\n    updateQueue.delete(elementWithData)\r\n\r\n    if (detector && handler) {\r\n      // 如果电池模块支持事件移除\r\n      detector.loadModule<BatteryModule>('battery').then((batteryModule) => {\r\n        const maybeOff = (batteryModule as any).off as ((...args: any[]) => any) | undefined\r\n        if (batteryModule && typeof maybeOff === 'function' && handler) {\r\n          maybeOff.call(batteryModule, 'batteryChange', handler)\r\n        }\r\n      }).catch(() => {\r\n        // 忽略错误\r\n      })\r\n    }\r\n\r\n    // 清理引用\r\n    delete elementWithData.__batteryChangeHandler\r\n    delete elementWithData.__deviceDetector\r\n    delete elementWithData.__lastBatteryState\r\n    delete elementWithData.__isVisible\r\n    delete elementWithData.__directiveBinding\r\n\r\n    // 恢复原始显示状态\r\n    if (el.dataset.originalDisplay) {\r\n      el.style.display = el.dataset.originalDisplay\r\n      delete el.dataset.originalDisplay\r\n    }\r\n    el.removeAttribute('hidden')\r\n    el.classList.remove(\r\n      'battery-visible',\n      'battery-hidden',\r\n      'battery-charging',\n      'battery-low',\n      'battery-critical',\n      'battery-full',\n      'battery-normal',\r\n      ...Array.from(el.classList).filter(cls => cls.startsWith('battery-level-')),\r\n    )\r\n\r\n    // 如果没有元素使用检测器了，清理全局检测器\r\n    if (elementCount === 0 && globalDetector) {\r\n      globalDetector.destroy()\r\n      globalDetector = null\r\n    }\r\n  },\r\n}\r\n\r\n/**\r\n * 充电状态指令\r\n *\r\n * @example\r\n * ```vue\r\n * <div v-battery-charging>充电时显示</div>\r\n * ```\r\n */\r\nexport const vBatteryCharging: Directive<HTMLElement> = {\r\n  mounted(el) {\r\n    const binding = {\r\n      value: 'charging' as const,\r\n      modifiers: {},\r\n      arg: undefined,\r\n      dir: vBattery,\r\n      instance: null,\r\n      oldValue: null,\r\n    }\r\n    vBattery.mounted!(el, binding, null as any, null as any)\r\n  },\r\n  updated(el) {\r\n    const binding = {\r\n      value: 'charging' as const,\r\n      modifiers: {},\r\n      arg: undefined,\r\n      dir: vBattery,\r\n      instance: null,\r\n      oldValue: null,\r\n    }\r\n    vBattery.updated!(el, binding, null as any, null as any)\r\n  },\r\n  unmounted: vBattery.unmounted,\r\n}\r\n\r\n/**\r\n * 低电量状态指令\r\n *\r\n * @example\r\n * ```vue\r\n * <div v-battery-low>低电量时显示</div>\r\n * ```\r\n */\r\nexport const vBatteryLow: Directive<HTMLElement> = {\r\n  mounted(el) {\r\n    const binding = {\r\n      value: 'low' as const,\r\n      modifiers: {},\r\n      arg: undefined,\r\n      dir: vBattery,\r\n      instance: null,\r\n      oldValue: null,\r\n    }\r\n    vBattery.mounted!(el, binding, null as any, null as any)\r\n  },\r\n  updated(el) {\r\n    const binding = {\r\n      value: 'low' as const,\r\n      modifiers: {},\r\n      arg: undefined,\r\n      dir: vBattery,\r\n      instance: null,\r\n      oldValue: null,\r\n    }\r\n    vBattery.updated!(el, binding, null as any, null as any)\r\n  },\r\n  unmounted: vBattery.unmounted,\r\n}\r\n"],"names":["globalDetector","elementCount","updateQueue","Set","isUpdateScheduled","getGlobalDetector","DeviceDetector","modules","loadModule","catch","error","console","warn","scheduleUpdate","size","requestAnimationFrame","elementsToUpdate","Array","from","clear","forEach","element","isConnected","__directiveBinding","detector","batteryModule","getData","batteryInfo","updateElementVisibility","parseDirectiveValue","value","conditions","threshold","inverse","isArray","condition","callback","checkBatteryCondition","charging","level","shouldShowElement","matches","some","getBatteryState","states","push","join","el","binding","currentState","__lastBatteryState","shouldShow","__isVisible","style","display","dataset","originalDisplay","removeAttribute","classList","add","remove","setAttribute","split","state","levelClass","Math","floor","filter","cls","startsWith","vBattery","mounted","elementWithData","undefined","handleBatteryChange","maybeOn","on","call","__batteryChangeHandler","__deviceDetector","updated","then","unmounted","handler","delete","maybeOff","off","destroy","vBatteryCharging","modifiers","arg","dir","instance","oldValue","vBatteryLow"],"mappings":"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"}