{"version":3,"file":"NetworkStatus.vue2.cjs","sources":["../../../src/vue/components/NetworkStatus.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport type { NetworkInfo, NetworkStatus, NetworkType } from '../../types'\r\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue'\r\nimport { useNetwork } from '../composables/useDevice'\r\n\r\n/**\r\n * NetworkStatus 组件属性定义\r\n */\r\ninterface Props {\r\n  /** 显示模式 */\r\n  displayMode?: 'icon' | 'text' | 'detailed' | 'progress'\r\n  /** 是否显示详细信息（仅在 detailed 模式下有效） */\r\n  showDetails?: boolean\r\n  /** 是否显示刷新按钮 */\r\n  showRefresh?: boolean\r\n  /** 自动刷新间隔（毫秒），0 表示不自动刷新 */\r\n  autoRefresh?: number\r\n  /** 刷新间隔（毫秒） */\r\n  refreshInterval?: number\r\n}\r\n\r\n/**\r\n * 组件事件定义\r\n */\r\ninterface Emits {\r\n  /** 网络状态更新事件 */\r\n  (e: 'update', networkInfo: NetworkInfo): void\r\n  /** 状态变化事件 */\r\n  (e: 'statusChange', status: NetworkStatus): void\r\n  /** 刷新事件 */\r\n  (e: 'refresh'): void\r\n  /** 错误事件 */\r\n  (e: 'error', error: string): void\r\n}\r\n\r\n// 定义 props 和 emits\r\nconst props = withDefaults(defineProps<Props>(), {\r\n  displayMode: 'detailed',\r\n  showDetails: true,\r\n  showRefresh: false,\r\n  autoRefresh: 0,\r\n  refreshInterval: 30000,\r\n})\r\n\r\nconst emit = defineEmits<Emits>()\r\n\r\n// 使用网络检测 composable\r\nconst { networkInfo, isLoaded, loadModule } = useNetwork()\r\n\r\n// 组件状态\r\nconst isLoading = ref(true)\r\nconst errorMessage = ref('')\r\nconst lastStatus = ref<NetworkStatus>()\r\n\r\n// 计算属性\r\nconst hasError = computed(() => !!errorMessage.value)\r\n\r\n// 自动刷新定时器\r\nlet autoRefreshTimer: number | null = null\r\n\r\n/**\r\n * 获取网络状态图标\r\n */\r\nfunction getStatusIcon(status: NetworkStatus): string {\r\n  const icons = {\r\n    online: '🟢',\r\n    offline: '🔴',\r\n  }\r\n  return icons[status] || '⚪'\r\n}\r\n\r\n/**\r\n * 获取网络状态文本\r\n */\r\nfunction getStatusText(status: NetworkStatus): string {\r\n  const texts = {\r\n    online: '在线',\r\n    offline: '离线',\r\n  }\r\n  return texts[status] || '未知'\r\n}\r\n\r\n/**\r\n * 获取连接类型文本\r\n */\r\nfunction getConnectionTypeText(type: NetworkType): string {\r\n  const texts = {\r\n    wifi: 'WiFi',\r\n    cellular: '移动网络',\r\n    ethernet: '以太网',\r\n    bluetooth: '蓝牙',\r\n    wimax: 'WiMAX',\r\n    other: '其他',\r\n    unknown: '未知',\r\n    none: '无连接',\r\n  }\r\n  return texts[type] || '未知'\r\n}\r\n\r\n/**\r\n * 获取网速百分比（用于进度条显示）\r\n */\r\nfunction getSpeedPercentage(speed?: number): number {\r\n  if (!speed)\n    return 0\r\n  // 假设 100 Mbps 为满速\r\n  return Math.min((speed / 100) * 100, 100)\r\n}\r\n\r\n/**\r\n * 刷新网络状态\r\n */\r\nasync function refresh() {\r\n  try {\r\n    isLoading.value = true\r\n    errorMessage.value = ''\r\n\r\n    if (!isLoaded.value) {\r\n      await loadModule()\r\n    }\r\n\r\n    emit('refresh')\r\n  }\n  catch (error) {\r\n    const message = error instanceof Error ? error.message : '刷新失败'\r\n    errorMessage.value = message\r\n    emit('error', message)\r\n  }\n  finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\n/**\r\n * 设置自动刷新\r\n */\r\nfunction setupAutoRefresh() {\r\n  const interval = props.autoRefresh || props.refreshInterval\r\n  if (interval > 0) {\r\n    autoRefreshTimer = window.setInterval(() => {\r\n      refresh()\r\n    }, interval)\r\n  }\r\n}\r\n\r\n/**\r\n * 清理自动刷新\r\n */\r\nfunction clearAutoRefresh() {\r\n  if (autoRefreshTimer) {\r\n    clearInterval(autoRefreshTimer)\r\n    autoRefreshTimer = null\r\n  }\r\n}\r\n\r\n// 生命周期\r\nonMounted(async () => {\r\n  await refresh()\r\n  setupAutoRefresh()\r\n})\r\n\r\nonUnmounted(() => {\r\n  clearAutoRefresh()\r\n})\r\n\r\n// 监听网络信息变化\r\nwatch(networkInfo, (newInfo) => {\r\n  if (newInfo) {\r\n    emit('update', newInfo)\r\n\r\n    // 检查状态是否变化\r\n    if (lastStatus.value !== newInfo.status) {\r\n      lastStatus.value = newInfo.status\r\n      emit('statusChange', newInfo.status)\r\n    }\r\n  }\r\n}, { deep: true })\r\n\r\n// 监听 props 变化\r\nwatch(() => [props.autoRefresh, props.refreshInterval], () => {\r\n  clearAutoRefresh()\r\n  setupAutoRefresh()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"network-status\" :class=\"[\r\n      `network-status--${displayMode}`,\r\n      `network-status--${networkInfo?.status || 'unknown'}`,\r\n      {\r\n        'network-status--loading': isLoading,\r\n        'network-status--error': hasError,\r\n      },\r\n    ]\"\r\n  >\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"isLoading\" class=\"network-status__loading\">\r\n      <div class=\"network-status__spinner\" />\r\n      <span v-if=\"displayMode !== 'icon'\">检测网络状态...</span>\r\n    </div>\r\n\r\n    <!-- 错误状态 -->\r\n    <div v-else-if=\"hasError\" class=\"network-status__error\">\r\n      <span class=\"network-status__error-icon\">⚠️</span>\r\n      <span v-if=\"displayMode !== 'icon'\">网络检测失败</span>\r\n    </div>\r\n\r\n    <!-- 网络状态内容 -->\r\n    <div v-else-if=\"networkInfo\" class=\"network-status__content\">\r\n      <!-- 图标模式 -->\r\n      <template v-if=\"displayMode === 'icon'\">\r\n        <span\r\n          class=\"network-status__icon\" :class=\"[`network-status__icon--${networkInfo.status}`]\"\r\n          :title=\"getStatusText(networkInfo.status)\"\r\n        >\r\n          {{ getStatusIcon(networkInfo.status) }}\r\n        </span>\r\n      </template>\r\n\r\n      <!-- 文字模式 -->\r\n      <template v-else-if=\"displayMode === 'text'\">\r\n        <span class=\"network-status__text\">\r\n          {{ getStatusText(networkInfo.status) }}\r\n        </span>\r\n      </template>\r\n\r\n      <!-- 详细模式 -->\r\n      <template v-else-if=\"displayMode === 'detailed'\">\r\n        <div class=\"network-status__detailed\">\r\n          <div class=\"network-status__main\">\r\n            <span class=\"network-status__icon\">{{ getStatusIcon(networkInfo.status) }}</span>\r\n            <div class=\"network-status__info\">\r\n              <div class=\"network-status__status\">\n                {{ getStatusText(networkInfo.status) }}\n              </div>\r\n              <div class=\"network-status__type\">\n                {{ getConnectionTypeText(networkInfo.type) }}\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"showDetails && networkInfo.status === 'online'\" class=\"network-status__details\">\r\n            <div v-if=\"networkInfo.downlink\" class=\"network-status__detail\">\r\n              <label>下载速度</label>\r\n              <span>{{ networkInfo.downlink.toFixed(1) }} Mbps</span>\r\n            </div>\r\n            <div v-if=\"networkInfo.rtt\" class=\"network-status__detail\">\r\n              <label>延迟</label>\r\n              <span>{{ networkInfo.rtt }} ms</span>\r\n            </div>\r\n            <div v-if=\"networkInfo.saveData !== undefined\" class=\"network-status__detail\">\r\n              <label>省流模式</label>\r\n              <span>{{ networkInfo.saveData ? '开启' : '关闭' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 进度条模式 -->\r\n      <template v-else-if=\"displayMode === 'progress'\">\r\n        <div class=\"network-status__progress\">\r\n          <div class=\"network-status__progress-header\">\r\n            <span>{{ getStatusText(networkInfo.status) }}</span>\r\n            <span v-if=\"networkInfo.downlink\">{{ networkInfo.downlink.toFixed(1) }} Mbps</span>\r\n          </div>\r\n          <div class=\"network-status__progress-bar\">\r\n            <div\r\n              class=\"network-status__progress-fill\"\r\n              :style=\"{ width: `${getSpeedPercentage(networkInfo.downlink)}%` }\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- 刷新按钮 -->\r\n    <button\r\n      v-if=\"showRefresh && displayMode !== 'icon'\"\r\n      class=\"network-status__refresh\"\r\n      :disabled=\"isLoading\"\r\n      @click=\"refresh\"\r\n    >\r\n      🔄\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.network-status {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n/* 加载状态 */\r\n.network-status__loading {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  color: #6c757d;\r\n}\r\n\r\n.network-status__spinner {\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid #e1e5e9;\r\n  border-top: 2px solid #007bff;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 错误状态 */\r\n.network-status__error {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  color: #dc3545;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 图标模式 */\r\n.network-status__icon {\r\n  font-size: 16px;\r\n  cursor: default;\r\n}\r\n\r\n.network-status__icon--online {\r\n  color: #28a745;\r\n}\r\n\r\n.network-status__icon--offline {\r\n  color: #dc3545;\r\n}\r\n\r\n/* 文字模式 */\r\n.network-status__text {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.network-status--online .network-status__text {\r\n  color: #28a745;\r\n}\r\n\r\n.network-status--offline .network-status__text {\r\n  color: #dc3545;\r\n}\r\n\r\n/* 详细模式 */\r\n.network-status__detailed {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.network-status__main {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.network-status__info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.network-status__status {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.network-status__type {\r\n  font-size: 12px;\r\n  color: #6c757d;\r\n}\r\n\r\n.network-status__details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  padding-left: 24px;\r\n}\r\n\r\n.network-status__detail {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 12px;\r\n}\r\n\r\n.network-status__detail label {\r\n  color: #6c757d;\r\n}\r\n\r\n.network-status__detail span {\r\n  font-weight: 500;\r\n}\r\n\r\n/* 进度条模式 */\r\n.network-status__progress {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  min-width: 120px;\r\n}\r\n\r\n.network-status__progress-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 12px;\r\n}\r\n\r\n.network-status__progress-bar {\r\n  height: 4px;\r\n  background: #e1e5e9;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n}\r\n\r\n.network-status__progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #28a745, #20c997);\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.network-status--offline .network-status__progress-fill {\r\n  background: #dc3545;\r\n}\r\n\r\n/* 刷新按钮 */\r\n.network-status__refresh {\r\n  padding: 4px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.network-status__refresh:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.network-status__refresh:disabled {\r\n  opacity: 0.3;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 不同显示模式的样式调整 */\r\n.network-status--icon {\r\n  justify-content: center;\r\n}\r\n\r\n.network-status--text {\r\n  justify-content: flex-start;\r\n}\r\n\r\n.network-status--detailed {\r\n  padding: 8px;\r\n  border: 1px solid #e1e5e9;\r\n  border-radius: 6px;\r\n  background: #ffffff;\r\n}\r\n\r\n.network-status--progress {\r\n  padding: 6px;\r\n  border: 1px solid #e1e5e9;\r\n  border-radius: 6px;\r\n  background: #ffffff;\r\n}\r\n</style>\r\n"],"names":["props","__props","emit","__emit","networkInfo","isLoaded","loadModule","useNetwork","isLoading","ref","errorMessage","lastStatus","hasError","computed","value","autoRefreshTimer","getStatusIcon","status","icons","online","offline","getStatusText","texts","getConnectionTypeText","type","wifi","cellular","ethernet","bluetooth","wimax","other","unknown","none","getSpeedPercentage","speed","Math","min","refresh","error","message","Error","setupAutoRefresh","interval","autoRefresh","refreshInterval","window","setInterval","clearAutoRefresh","clearInterval","onMounted","onUnmounted","watch","newInfo","deep","_createElementBlock","class","displayMode","_unref","_createCommentVNode","_openBlock","_hoisted_1","_createElementVNode","_Fragment","key","_hoisted_3","_cache","_hoisted_5","_normalizeClass","title","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","showDetails","_hoisted_14","downlink","_hoisted_15","toFixed","rtt","_hoisted_16","saveData","undefined","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_21","style","_normalizeStyle","width","showRefresh","disabled","onClick","_hoisted_22"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAA,MAAMA,KAAAA,GAAQC,OAAAA;AAQd,IAAA,MAAMC,IAAAA,GAAOC,MAAAA;AAGb,IAAA,MAAM;AAAA,MAAEC,WAAAA;AAAAA,MAAaC,QAAAA;AAAAA,MAAUC;AAAAA,QAAeC,oBAAAA,EAAW;AAGzD,IAAA,MAAMC,SAAAA,GAAYC,QAAI,IAAI,CAAA;AAC1B,IAAA,MAAMC,YAAAA,GAAeD,QAAI,EAAE,CAAA;AAC3B,IAAA,MAAME,aAAaF,OAAAA,EAAmB;AAGtC,IAAA,MAAMG,WAAWC,YAAAA,CAAS,MAAM,CAAC,CAACH,aAAaI,KAAK,CAAA;AAGpD,IAAA,IAAIC,gBAAAA,GAAkC,IAAA;AAKtC,IAAA,SAASC,cAAcC,MAAAA,EAA+B;AACpD,MAAA,MAAMC,KAAAA,GAAQ;AAAA,QACZC,MAAAA,EAAQ,WAAA;AAAA,QACRC,OAAAA,EAAS;AAAA,OACX;AACA,MAAA,OAAOF,KAAAA,CAAMD,MAAM,CAAA,IAAK,QAAA;AAAA,IAC1B;AAKA,IAAA,SAASI,cAAcJ,MAAAA,EAA+B;AACpD,MAAA,MAAMK,KAAAA,GAAQ;AAAA,QACZH,MAAAA,EAAQ,cAAA;AAAA,QACRC,OAAAA,EAAS;AAAA,OACX;AACA,MAAA,OAAOE,KAAAA,CAAML,MAAM,CAAA,IAAK,cAAA;AAAA,IAC1B;AAKA,IAAA,SAASM,sBAAsBC,IAAAA,EAA2B;AACxD,MAAA,MAAMF,KAAAA,GAAQ;AAAA,QACZG,IAAAA,EAAM,MAAA;AAAA,QACNC,QAAAA,EAAU,0BAAA;AAAA,QACVC,QAAAA,EAAU,oBAAA;AAAA,QACVC,SAAAA,EAAW,cAAA;AAAA,QACXC,KAAAA,EAAO,OAAA;AAAA,QACPC,KAAAA,EAAO,cAAA;AAAA,QACPC,OAAAA,EAAS,cAAA;AAAA,QACTC,IAAAA,EAAM;AAAA,OACR;AACA,MAAA,OAAOV,KAAAA,CAAME,IAAI,CAAA,IAAK,cAAA;AAAA,IACxB;AAKA,IAAA,SAASS,mBAAmBC,KAAAA,EAAwB;AAClD,MAAA,IAAI,CAACA,OACH,OAAO,CAAA;AAET,MAAA,OAAOC,IAAAA,CAAKC,GAAAA,CAAKF,KAAAA,GAAQ,GAAA,GAAO,KAAK,GAAG,CAAA;AAAA,IAC1C;AAKA,IAAA,eAAeG,OAAAA,GAAU;AACvB,MAAA,IAAI;AACF7B,QAAAA,SAAAA,CAAUM,KAAAA,GAAQ,IAAA;AAClBJ,QAAAA,YAAAA,CAAaI,KAAAA,GAAQ,EAAA;AAErB,QAAA,IAAI,CAACT,SAASS,KAAAA,EAAO;AACnB,UAAA,MAAMR,UAAAA,EAAW;AAAA,QACnB;AAEAJ,QAAAA,IAAAA,CAAK,SAAS,CAAA;AAAA,MAChB,SACOoC,KAAAA,EAAO;AACZ,QAAA,MAAMC,OAAAA,GAAUD,KAAAA,YAAiBE,KAAAA,GAAQF,KAAAA,CAAMC,OAAAA,GAAU,0BAAA;AACzD7B,QAAAA,YAAAA,CAAaI,KAAAA,GAAQyB,OAAAA;AACrBrC,QAAAA,IAAAA,CAAK,SAASqC,OAAO,CAAA;AAAA,MACvB,CAAA,SAAA;AAEE/B,QAAAA,SAAAA,CAAUM,KAAAA,GAAQ,KAAA;AAAA,MACpB;AAAA,IACF;AAKA,IAAA,SAAS2B,gBAAAA,GAAmB;AAC1B,MAAA,MAAMC,QAAAA,GAAW1C,KAAAA,CAAM2C,WAAAA,IAAe3C,KAAAA,CAAM4C,eAAAA;AAC5C,MAAA,IAAIF,WAAW,CAAA,EAAG;AAChB3B,QAAAA,gBAAAA,GAAmB8B,MAAAA,CAAOC,YAAY,MAAM;AAC1CT,UAAAA,OAAAA,EAAQ;AAAA,QACV,GAAGK,QAAQ,CAAA;AAAA,MACb;AAAA,IACF;AAKA,IAAA,SAASK,gBAAAA,GAAmB;AAC1B,MAAA,IAAIhC,gBAAAA,EAAkB;AACpBiC,QAAAA,aAAAA,CAAcjC,gBAAgB,CAAA;AAC9BA,QAAAA,gBAAAA,GAAmB,IAAA;AAAA,MACrB;AAAA,IACF;AAGAkC,IAAAA,aAAAA,CAAU,YAAY;AACpB,MAAA,MAAMZ,OAAAA,EAAQ;AACdI,MAAAA,gBAAAA,EAAiB;AAAA,IACnB,CAAC,CAAA;AAEDS,IAAAA,eAAAA,CAAY,MAAM;AAChBH,MAAAA,gBAAAA,EAAiB;AAAA,IACnB,CAAC,CAAA;AAGDI,IAAAA,SAAAA,CAAM/C,aAAcgD,CAAAA,OAAAA,KAAY;AAC9B,MAAA,IAAIA,OAAAA,EAAS;AACXlD,QAAAA,IAAAA,CAAK,UAAUkD,OAAO,CAAA;AAGtB,QAAA,IAAIzC,UAAAA,CAAWG,KAAAA,KAAUsC,OAAAA,CAAQnC,MAAAA,EAAQ;AACvCN,UAAAA,UAAAA,CAAWG,QAAQsC,OAAAA,CAAQnC,MAAAA;AAC3Bf,UAAAA,IAAAA,CAAK,cAAA,EAAgBkD,QAAQnC,MAAM,CAAA;AAAA,QACrC;AAAA,MACF;AAAA,IACF,CAAA,EAAG;AAAA,MAAEoC,IAAAA,EAAM;AAAA,KAAM,CAAA;AAGjBF,IAAAA,SAAAA,CAAM,MAAM,CAACnD,KAAAA,CAAM2C,aAAa3C,KAAAA,CAAM4C,eAAe,GAAG,MAAM;AAC5DG,MAAAA,gBAAAA,EAAiB;AACjBN,MAAAA,gBAAAA,EAAiB;AAAA,IACnB,CAAC,CAAA;;8BAICa,sBAAAA;AAAAA,QAmGM,KAAA;AAAA,QAAA;AAAA,UAlGJC,KAAAA,sBAAM,gBAAA,EAAgB,oBAAqCC,IAAAA,CAAAA,WAAW,CAAA,CAAA,EAA8B,mBAAAC,SAAAA,CAAArD,WAAA,CAAA,EAAaa,MAAAA,IAAM,SAAA,CAAA,CAAA;uCAA8DT,SAAAA,CAAAM,KAAAA;AAAAA,qCAA6CF,QAAAA,CAAAE;AAAAA;;SASlO4C,sBAAAA,CAAA,4BAAA,CAAA,EACWlD,SAAAA,CAAAM,SAAX6C,aAAAA,EAAA,EAAAL,sBAAAA,CAGM,KAAA,EAHNM,YAGM,2BAFJC,sBAAAA;AAAAA,UAAuC,KAAA;AAAA,UAAA;AAAA,YAAlCN,KAAAA,EAAM;AAAA,WAAyB;AAAA,UAAA,IAAA;AAAA,UAAA;AAAA;AAAA,SAAA,CAAA,EACxBC,KAAAA,WAAAA,KAAW,MAAA,IAAvBG,eAAA,EAAAL,sBAAAA,CAAoD,oBAAhB,yCAAS,+CAI/B1C,QAAAA,CAAAE,KAAAA,qBAAhBwC,sBAAAA;AAAAA,UAGMQ,YAAAA;AAAAA,UAAA;AAAA,YAAAC,GAAAA,EAAA;AAAA,WAAA;AAAA,UAAA,CAJNL,sBAAAA,CAAA,4BAAA,CAAA,EACAG,sBAAAA,CAGM,KAAA,EAHNG,UAAAA,EAGM,CAFJC,MAAAA,CAAA,CAAA,CAAA,KAAAA,MAAAA,CAAA,CAAA,CAAA,GAAAJ,sBAAAA;AAAAA,YAAkD,MAAA;AAAA,YAAA;AAAA,cAA5CN,KAAAA,EAAM;AAAA;YAA6B,cAAA;AAAA,YAAE;AAAA;AAAA,cAC/BC,IAAAA,CAAAA,WAAAA,KAAW,MAAA,IAAvBG,aAAAA,IAAAL,sBAAAA,CAAiD,MAAA,cAAb,sCAAM;;;aAI5BG,SAAAA,CAAArD,WAAA,CAAA,qBAAhBkD,sBAAAA;AAAAA,UAiEMQ,YAAAA;AAAAA,UAAA;AAAA,YAAAC,GAAAA,EAAA;AAAA,WAAA;AAAA,UAAA,CAlENL,sBAAAA,CAAA,wCAAA,CAAA,EACAG,sBAAAA,CAiEM,OAjENK,UAAAA,EAiEM,CAhEJR,sBAAAA,CAAA,4BAAA,GACgBF,IAAAA,CAAAA,WAAAA,KAAW,2BACzBF,uBAKO,MAAA,EAAA;AAAA;YAJLC,KAAAA,EAAKY,kBAAAA,CAAA,CAAC,sBAAA,EAAsB,CAAA,CAAA,sBAAA,EAAmCV,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAM,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,YAChFmD,KAAAA,EAAO/C,aAAAA,CAAcoC,SAAAA,CAAArD,WAAA,EAAYa,MAAM;AAAA,iCAErCD,aAAAA,CAAcyC,SAAAA,CAAArD,WAAA,EAAYa,MAAM,CAAA,CAAA,EAAA,EAAA,EAAAoD,UAAA,CAAA,IAKlBb,IAAAA,CAAAA,WAAAA,KAAW,MAAA,qBAAhCF,sBAAAA;AAAAA,YAIWQ,YAAAA;AAAAA,YAAA;AAAA,cAAAC,GAAAA,EAAA;AAAA,aAAA;AAAA,YAAA,CALXL,sBAAAA,CAAA,4BAAA,CAAA,EAEEG,sBAAAA;AAAAA,cAEO,MAAA;AAAA,cAFPS,UAAAA;AAAAA,cAEOC,oBADFlD,aAAAA,CAAcoC,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAM,CAAA,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA,CAAA;AAAA;;eAKlBuC,IAAAA,CAAAA,WAAAA,KAAW,UAAA,qBAAhCF,sBAAAA;AAAAA,YA6BWQ,YAAAA;AAAAA,YAAA;AAAA,cAAAC,GAAAA,EAAA;AAAA,aAAA;AAAA,YAAA,CA9BXL,sBAAAA,CAAA,4BAAA,CAAA,EAEEG,sBAAAA,CA2BM,KAAA,EA3BNW,UAAAA,EA2BM,CA1BJX,sBAAAA,CAUM,KAAA,EAVNY,UAAAA,EAUM,CATJZ,sBAAAA;AAAAA,cAAiF,MAAA;AAAA,cAAjFa,WAAAA;AAAAA,cAAiFH,oBAA3CvD,aAAAA,CAAcyC,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAM,CAAA,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA,EACtE4C,sBAAAA,CAOM,KAAA,EAPNc,WAAAA,EAOM,CANJd,sBAAAA;AAAAA,cAEM,KAAA;AAAA,cAFNe,WAAAA;AAAAA,cAEML,oBADDlD,aAAAA,CAAcoC,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAM,CAAA,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA,EAErC4C,sBAAAA;AAAAA,cAEM,KAAA;AAAA,cAFNgB,WAAAA;AAAAA,cAEMN,oBADDhD,qBAAAA,CAAsBkC,SAAAA,CAAArD,WAAA,CAAA,CAAYoB,IAAI,CAAA,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA,MAKpCsD,IAAAA,CAAAA,WAAAA,IAAerB,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAAA,KAAM,QAAA,IAA5C0C,aAAAA,IAAAL,sBAAAA,CAaM,KAAA,EAbNyB,WAAAA,EAaM,CAZOtB,SAAAA,CAAArD,WAAA,CAAA,CAAY4E,QAAAA,IAAvBrB,eAAA,EAAAL,sBAAAA,CAGM,KAAA,EAHN2B,WAAAA,EAGM,CAFJhB,MAAAA,CAAA,CAAA,CAAA,KAAAA,MAAAA,CAAA,CAAA,CAAA,GAAAJ,sBAAAA;AAAAA,cAAmB,OAAA;AAAA;cAAZ,0BAAA;AAAA,cAAI;AAAA;AAAA,aAAA,CAAA,EACXA,sBAAAA;AAAAA,cAAuD,MAAA;AAAA;kCAA9CJ,UAAArD,WAAA,CAAA,CAAY4E,SAASE,OAAAA,OAAa,OAAA;AAAA,cAAK;AAAA;AAAA,aAAA,4CAEvCzB,SAAAA,CAAArD,WAAA,CAAA,CAAY+E,GAAAA,IAAvBxB,eAAA,EAAAL,sBAAAA,CAGM,OAHN8B,WAAAA,EAGM,CAFJnB,OAAA,CAAA,CAAA,KAAAA,MAAAA,CAAA,CAAA,CAAA,GAAAJ,sBAAAA;AAAAA,cAAiB,OAAA;AAAA;cAAV,cAAA;AAAA,cAAE;AAAA;AAAA,aAAA,CAAA,EACTA,sBAAAA;AAAAA,cAAqC,MAAA;AAAA,cAAA,IAAA;AAAA,cAAAU,mBAAAA,CAA5Bd,SAAAA,CAAArD,WAAA,CAAA,CAAY+E,GAAG,CAAA,GAAG,KAAA;AAAA,cAAG;AAAA;AAAA,aAAA,4CAErB1B,SAAAA,CAAArD,WAAA,CAAA,CAAYiF,QAAAA,KAAaC,UAApC3B,aAAAA,EAAA,EAAAL,sBAAAA,CAGM,KAAA,EAHNiC,WAAAA,EAGM,CAFJtB,OAAA,CAAA,CAAA,KAAAA,MAAAA,CAAA,CAAA,CAAA,GAAAJ,sBAAAA;AAAAA,cAAmB,OAAA;AAAA;cAAZ,0BAAA;AAAA,cAAI;AAAA;AAAA,aAAA,CAAA,EACXA,sBAAAA;AAAAA,cAAqD,MAAA;AAAA,cAAA,IAAA;AAAA,cAAAU,oBAA5Cd,SAAAA,CAAArD,WAAA,CAAA,CAAYiF,QAAAA,GAAQ,iBAAA,cAAA,CAAA;AAAA,cAAA;AAAA;AAAA,aAAA;;;eAOhB7B,IAAAA,CAAAA,WAAAA,KAAW,UAAA,qBAAhCF,sBAAAA;AAAAA,YAaWQ,YAAAA;AAAAA,YAAA;AAAA,cAAAC,GAAAA,EAAA;AAAA,aAAA;AAAA,YAAA,CAdXL,sBAAAA,CAAA,kCAAA,CAAA,EAEEG,sBAAAA,CAWM,KAAA,EAXN2B,WAAAA,EAWM,CAVJ3B,sBAAAA,CAGM,KAAA,EAHN4B,WAAAA,EAGM,CAFJ5B,sBAAAA;AAAAA,cAAoD,MAAA;AAAA,cAAA,IAAA;AAAA,cAAAU,oBAA3ClD,aAAAA,CAAcoC,SAAAA,CAAArD,WAAA,CAAA,CAAYa,MAAM,CAAA,CAAA;AAAA,cAAA;AAAA;AAAA,eAC7BwC,SAAAA,CAAArD,WAAA,CAAA,CAAY4E,QAAAA,IAAxBrB,eAAA,EAAAL,sBAAAA;AAAAA,cAAmF,MAAA;AAAA;kCAA9CG,UAAArD,WAAA,CAAA,CAAY4E,SAASE,OAAAA,OAAa,OAAA;AAAA,cAAK;AAAA;AAAA,aAAA,4CAE9ErB,sBAAAA,CAKM,KAAA,EALN6B,WAAAA,EAKM,CAJJ7B,sBAAAA;AAAAA,cAGE,KAAA;AAAA,cAAA;AAAA,gBAFAN,KAAAA,EAAM,+BAAA;AAAA,gBACLoC,OAAKC,kBAAAA,CAAA;AAAA,kBAAAC,OAAA,CAAA,EAAc5D,kBAAAA,CAAmBwB,UAAArD,WAAA,CAAA,CAAY4E,QAAQ,CAAA,CAAA,CAAA;AAAA,iBAAA;AAAA;;;;;;;;;;mDAOrEtB,uBAAA,4BAAA,CAAA,EAEQoC,IAAAA,CAAAA,WAAAA,IAAetC,KAAAA,WAAAA,KAAW,MAAA,qBADlCF,uBAOS,QAAA,EAAA;AAAA;UALPC,KAAAA,EAAM,yBAAA;AAAA,UACLwC,UAAUvF,SAAAA,CAAAM,KAAAA;AAAAA,UACVkF,OAAAA,EAAO3D;AAAAA,WACT,eAED,CAAA,EAAA4D,WAAA;;;;;;;;;;;;;"}