{"version":3,"file":"plugin.js","sources":["../../src/vue/plugin.ts"],"sourcesContent":["import type { App, Plugin } from 'vue'\r\nimport type { DevicePluginOptions } from '../types'\r\nimport { inject } from 'vue'\r\nimport { DeviceDetector } from '../core/DeviceDetector'\r\nimport {\r\n  vDevice,\r\n  vDeviceDesktop,\r\n  vDeviceMobile,\r\n  vDeviceTablet,\r\n} from './directives/vDevice'\r\n\r\n/**\r\n * Vue3 设备检测插件\r\n *\r\n * 提供全局的设备检测功能，包括：\r\n * - 全局属性注入\r\n * - 依赖注入支持\r\n * - 自定义指令注册\r\n * - 自动资源清理\r\n *\r\n * @example\r\n * ```typescript\r\n * import { createApp } from 'vue'\r\n * import { DevicePlugin } from '@ldesign/device/vue'\r\n *\r\n * const app = createApp(App)\r\n *\r\n * // 使用默认配置\r\n * app.use(DevicePlugin)\r\n *\r\n * // 使用自定义配置\r\n * app.use(DevicePlugin, {\r\n *   globalPropertyName: '$device',\r\n *   enableResize: true,\r\n *   enableOrientation: true,\r\n *   modules: ['network', 'battery']\r\n * })\r\n * ```\r\n */\r\nexport const DevicePlugin: Plugin = {\r\n  install(app: App, options: DevicePluginOptions = {}) {\r\n    const { globalPropertyName = '$device', ...detectorOptions } = options\r\n\r\n    // 创建全局设备检测器实例\r\n    const detector = new DeviceDetector(detectorOptions)\r\n\r\n    // 注册全局属性\r\n    app.config.globalProperties[globalPropertyName] = detector\r\n\r\n    // 提供依赖注入\r\n    app.provide('device-detector', detector)\r\n\r\n    // 注册指令\r\n    app.directive('device', vDevice)\r\n    app.directive('device-mobile', vDeviceMobile)\r\n    app.directive('device-tablet', vDeviceTablet)\r\n    app.directive('device-desktop', vDeviceDesktop)\r\n\r\n    // 在应用卸载时清理资源\r\n    const originalUnmount = app.unmount\r\n    app.unmount = function () {\r\n      detector.destroy()\r\n      return originalUnmount.call(this)\r\n    }\r\n  },\r\n}\r\n\r\n/**\r\n * 创建设备检测插件\r\n *\r\n * 工厂函数，用于创建带有预配置选项的插件实例\r\n *\r\n * @param options 插件配置选项\r\n * @returns Vue 插件实例\r\n *\r\n * @example\r\n * ```typescript\r\n * import { createApp } from 'vue'\r\n * import { createDevicePlugin } from '@ldesign/device/vue'\r\n *\r\n * const app = createApp(App)\r\n * const devicePlugin = createDevicePlugin({\r\n *   enableResize: true,\r\n *   modules: ['network']\r\n * })\r\n *\r\n * app.use(devicePlugin)\r\n * ```\r\n */\r\nexport function createDevicePlugin(options: DevicePluginOptions = {}): Plugin {\r\n  return {\r\n    install(app: App) {\r\n      if (DevicePlugin.install) {\r\n        DevicePlugin.install(app, options)\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\n/**\r\n * 在组合式 API 中获取设备检测器实例\r\n *\r\n * 通过依赖注入获取全局设备检测器实例，必须在安装 DevicePlugin 后使用\r\n *\r\n * @returns DeviceDetector 实例\r\n * @throws 如果未安装 DevicePlugin 则抛出错误\r\n *\r\n * @example\r\n * ```typescript\r\n * import { useDeviceDetector } from '@ldesign/device/vue'\r\n *\r\n * export default {\r\n *   setup() {\r\n *     const detector = useDeviceDetector()\r\n *\r\n *     // 获取设备信息\r\n *     const deviceInfo = detector.getDeviceInfo()\r\n *\r\n *     // 监听设备变化\r\n *     detector.on('deviceChange', (info) => {\r\n *       \r\n *     })\r\n *\r\n *     return {\r\n *       deviceInfo\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport function useDeviceDetector(): DeviceDetector {\r\n  const detector = inject('device-detector') as DeviceDetector\r\n\r\n  if (!detector) {\r\n    throw new Error(\r\n      'DeviceDetector not found. Make sure to install DevicePlugin first.',\r\n    )\r\n  }\r\n\r\n  return detector\r\n}\r\n\r\n// 默认导出\r\nexport default DevicePlugin\r\n"],"names":["DevicePlugin","install","app","options","globalPropertyName","detectorOptions","detector","DeviceDetector","config","globalProperties","provide","directive","vDevice","vDeviceMobile","vDeviceTablet","vDeviceDesktop","originalUnmount","unmount","destroy","call","createDevicePlugin","useDeviceDetector","inject","Error"],"mappings":";;;;;;;;;;;;;AAuCO,MAAMA,YAAAA,GAAuB;AAAA,EAClCC,OAAAA,CAAQC,GAAAA,EAAUC,OAAAA,GAA+B,EAAC,EAAG;AACnD,IAAA,MAAM;AAAA,MAAEC,kBAAAA,GAAqB,SAAA;AAAA,MAAW,GAAGC;AAAAA,KAAgB,GAAIF,OAAAA;AAG/D,IAAA,MAAMG,QAAAA,GAAW,IAAIC,cAAAA,CAAeF,eAAe,CAAA;AAGnDH,IAAAA,GAAAA,CAAIM,MAAAA,CAAOC,gBAAAA,CAAiBL,kBAAkB,CAAA,GAAIE,QAAAA;AAGlDJ,IAAAA,GAAAA,CAAIQ,OAAAA,CAAQ,mBAAmBJ,QAAQ,CAAA;AAGvCJ,IAAAA,GAAAA,CAAIS,SAAAA,CAAU,UAAUC,OAAO,CAAA;AAC/BV,IAAAA,GAAAA,CAAIS,SAAAA,CAAU,iBAAiBE,aAAa,CAAA;AAC5CX,IAAAA,GAAAA,CAAIS,SAAAA,CAAU,iBAAiBG,aAAa,CAAA;AAC5CZ,IAAAA,GAAAA,CAAIS,SAAAA,CAAU,kBAAkBI,cAAc,CAAA;AAG9C,IAAA,MAAMC,kBAAkBd,GAAAA,CAAIe,OAAAA;AAC5Bf,IAAAA,GAAAA,CAAIe,UAAU,WAAY;AACxBX,MAAAA,QAAAA,CAASY,OAAAA,EAAQ;AACjB,MAAA,OAAOF,eAAAA,CAAgBG,KAAK,IAAI,CAAA;AAAA,IAClC,CAAA;AAAA,EACF;AACF;AAwBO,SAASC,kBAAAA,CAAmBjB,OAAAA,GAA+B,EAAC,EAAW;AAC5E,EAAA,OAAO;AAAA,IACLF,QAAQC,GAAAA,EAAU;AAChB,MAAA,IAAIF,aAAaC,OAAAA,EAAS;AACxBD,QAAAA,YAAAA,CAAaC,OAAAA,CAAQC,KAAKC,OAAO,CAAA;AAAA,MACnC;AAAA,IACF;AAAA,GACF;AACF;AAiCO,SAASkB,iBAAAA,GAAoC;AAClD,EAAA,MAAMf,QAAAA,GAAWgB,OAAO,iBAAiB,CAAA;AAEzC,EAAA,IAAI,CAAChB,QAAAA,EAAU;AACb,IAAA,MAAM,IAAIiB,MACR,oEACF,CAAA;AAAA,EACF;AAEA,EAAA,OAAOjB,QAAAA;AACT;;;;;;;"}