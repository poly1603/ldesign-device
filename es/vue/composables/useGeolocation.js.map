{"version":3,"file":"useGeolocation.js","sources":["../../../src/vue/composables/useGeolocation.ts"],"sourcesContent":["import type { Ref } from 'vue'\r\nimport type { GeolocationInfo, GeolocationModule } from '../../types'\r\nimport { computed, onUnmounted, readonly, ref } from 'vue'\r\nimport { DeviceDetector } from '../../core/DeviceDetector'\r\n\r\n/**\r\n * 地理位置检测 Composition API\r\n *\r\n * 提供设备地理位置获取、位置监听、精度控制等功能的响应式接口\r\n *\r\n * @returns 地理位置相关的响应式数据和方法\r\n *\r\n * @example\r\n * ```vue\r\n * <script setup>\r\n * import { useGeolocation } from '@ldesign/device/vue'\r\n *\r\n * const {\r\n *   position,\r\n *   latitude,\r\n *   longitude,\r\n *   accuracy,\r\n *   error,\r\n *   isSupported,\r\n *   isWatching,\r\n *   isLoaded,\r\n *   loadModule,\r\n *   getCurrentPosition,\r\n *   startWatching,\r\n *   stopWatching\r\n * } = useGeolocation()\r\n *\r\n * // 加载地理位置模块\r\n * onMounted(async () => {\r\n *   try {\r\n *     await loadModule()\r\n *     if (isSupported.value) {\r\n *       await getCurrentPosition()\r\n *     }\r\n *   } catch (error) {\r\n *     console.warn('无法获取地理位置:', error)\r\n *   }\r\n * })\r\n * </script>\r\n *\r\n * <template>\r\n *   <div>\r\n *     <div v-if=\"!isSupported\">\r\n *       <p>设备不支持地理位置 API</p>\r\n *     </div>\r\n *     <div v-else-if=\"error\">\r\n *       <p>获取位置失败: {{ error }}</p>\r\n *       <button @click=\"getCurrentPosition\">重试</button>\r\n *     </div>\r\n *     <div v-else-if=\"position\">\r\n *       <h3>当前位置</h3>\r\n *       <p>纬度: {{ latitude?.toFixed(6) }}</p>\r\n *       <p>经度: {{ longitude?.toFixed(6) }}</p>\r\n *       <p>精度: {{ accuracy }}米</p>\r\n *       <div>\r\n *         <button v-if=\"!isWatching\" @click=\"startWatching\">\r\n *           开始监听位置变化\r\n *         </button>\r\n *         <button v-else @click=\"stopWatching\">\r\n *           停止监听位置变化\r\n *         </button>\r\n *       </div>\r\n *     </div>\r\n *     <div v-else>\r\n *       <p>正在获取位置信息...</p>\r\n *     </div>\r\n *   </div>\r\n * </template>\r\n * ```\r\n */\r\nexport function useGeolocation() {\r\n  const position = ref<GeolocationInfo | null>(null) as Ref<GeolocationInfo | null>\r\n  const latitude = ref<number | null>(null)\r\n  const longitude = ref<number | null>(null)\r\n  const accuracy = ref<number | null>(null)\r\n  const altitude = ref<number | null>(null)\r\n  const heading = ref<number | null>(null)\r\n  const speed = ref<number | null>(null)\r\n  const error = ref<string | null>(null)\r\n  const isSupported = ref(false)\r\n  const isLoaded = ref(false)\r\n  const isWatching = ref(false)\r\n  const isLoading = ref(false)\r\n\r\n  let detector: DeviceDetector | null = null\r\n  let geolocationModule: GeolocationModule | null = null\r\n  let cleanupFunctions: Array<() => void> = []\r\n\r\n  /**\r\n   * 更新位置信息\r\n   */\r\n  const updatePosition = (pos: GeolocationInfo) => {\r\n    position.value = pos\r\n    latitude.value = pos.latitude\r\n    longitude.value = pos.longitude\r\n    accuracy.value = pos.accuracy\r\n    altitude.value = pos.altitude ?? null\r\n    heading.value = pos.heading ?? null\r\n    speed.value = pos.speed ?? null\r\n    error.value = null\r\n  }\r\n\r\n  /**\r\n   * 加载地理位置模块\r\n   */\r\n  const loadModule = async () => {\r\n    if (!detector) {\r\n      detector = new DeviceDetector()\r\n    }\r\n\r\n    try {\r\n      geolocationModule = await detector.loadModule<GeolocationModule>('geolocation')\r\n      if (geolocationModule && typeof geolocationModule.isSupported === 'function') {\r\n        isSupported.value = geolocationModule.isSupported()\r\n        isLoaded.value = true\r\n        error.value = null\r\n      }\r\n    }\r\n    catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Failed to load geolocation module'\r\n      console.warn('Failed to load geolocation module:', err)\r\n      throw err\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 停止监听位置变化\r\n   */\r\n  const stopWatching = async () => {\r\n    if (!geolocationModule || !isWatching.value)\r\n      return\r\n\r\n    try {\r\n      if (geolocationModule && typeof geolocationModule.stopWatching === 'function') {\r\n        geolocationModule.stopWatching()\r\n        isWatching.value = false\r\n      }\r\n    }\r\n    catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Failed to stop watching position'\r\n      throw err\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 卸载地理位置模块\r\n   */\r\n  const unloadModule = async () => {\r\n    // 停止监听\r\n    if (isWatching.value) {\r\n      await stopWatching()\r\n    }\r\n\r\n    // 清理事件监听器\r\n    cleanupFunctions.forEach(cleanup => cleanup())\r\n    cleanupFunctions = []\r\n\r\n    if (detector) {\r\n      await detector.unloadModule('geolocation')\r\n      geolocationModule = null\r\n      position.value = null\r\n      latitude.value = null\r\n      longitude.value = null\r\n      accuracy.value = null\r\n      altitude.value = null\r\n      heading.value = null\r\n      speed.value = null\r\n      isLoaded.value = false\r\n      error.value = null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前位置\r\n   */\r\n  const getCurrentPosition = async (options?: PositionOptions) => {\r\n    if (!geolocationModule) {\r\n      await loadModule()\r\n    }\r\n\r\n    isLoading.value = true\r\n    try {\r\n      if (!isSupported.value) {\r\n        const err = new Error('Geolocation is not supported')\r\n        error.value = err.message\r\n        throw err\r\n      }\r\n\r\n      if (geolocationModule && typeof geolocationModule.getCurrentPosition === 'function') {\r\n        const pos = await geolocationModule.getCurrentPosition(options)\r\n        updatePosition(pos)\r\n      }\r\n    }\r\n    catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Failed to get current position'\r\n      throw err\r\n    }\r\n    finally {\r\n      isLoading.value = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 开始监听位置变化\r\n   */\r\n  const startWatching = async () => {\r\n    if (!geolocationModule || isWatching.value) {\r\n      if (!geolocationModule) {\r\n        await loadModule()\r\n      }\r\n      if (isWatching.value)\r\n        return\r\n    }\r\n\r\n    if (!isSupported.value) {\r\n      throw new Error('Geolocation is not supported')\r\n    }\r\n\r\n    try {\r\n      if (geolocationModule && typeof geolocationModule.startWatching === 'function') {\r\n        const positionHandler = (pos: GeolocationInfo) => {\r\n          updatePosition(pos)\r\n        }\r\n\r\n        geolocationModule.startWatching(positionHandler)\r\n        isWatching.value = true\r\n        error.value = null\r\n\r\n        // 保存清理函数\r\n        cleanupFunctions.push(() => {\r\n          if (geolocationModule && typeof geolocationModule.stopWatching === 'function') {\r\n            geolocationModule.stopWatching()\r\n          }\r\n        })\r\n      }\r\n    }\r\n    catch (err) {\r\n      error.value = err instanceof Error ? err.message : 'Failed to start watching position'\r\n      throw err\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁地理位置检测器\r\n   */\r\n  const destroyGeolocation = async () => {\r\n    await unloadModule()\r\n    if (detector) {\r\n      await detector.destroy()\r\n      detector = null\r\n    }\r\n  }\r\n\r\n  // 计算属性\r\n  const hasPosition = computed(() => position.value !== null)\r\n  const isHighAccuracy = computed(() => (accuracy.value ?? 0) < 100)\r\n  const coordinates = computed(() => {\r\n    if (!latitude.value || !longitude.value)\r\n      return null\r\n    return {\r\n      lat: latitude.value,\r\n      lng: longitude.value,\r\n    }\r\n  })\r\n\r\n  onUnmounted(() => {\r\n    destroyGeolocation()\r\n  })\r\n\r\n  return {\r\n    position: readonly(position),\r\n    latitude: readonly(latitude),\r\n    longitude: readonly(longitude),\r\n    accuracy: readonly(accuracy),\r\n    altitude: readonly(altitude),\r\n    heading: readonly(heading),\r\n    speed: readonly(speed),\r\n    error: readonly(error),\r\n    isSupported: readonly(isSupported),\r\n    isWatching: readonly(isWatching),\r\n    isLoaded: readonly(isLoaded),\r\n    isLoading: readonly(isLoading),\r\n    hasPosition,\r\n    isHighAccuracy,\r\n    coordinates,\r\n    loadModule,\r\n    unloadModule,\r\n    getCurrentPosition,\r\n    startWatching,\r\n    stopWatching,\r\n  }\r\n}\r\n"],"names":["useGeolocation","position","ref","latitude","longitude","accuracy","altitude","heading","speed","error","isSupported","isLoaded","isWatching","isLoading","detector","geolocationModule","cleanupFunctions","updatePosition","pos","value","loadModule","DeviceDetector","err","Error","message","console","warn","stopWatching","unloadModule","forEach","cleanup","getCurrentPosition","options","startWatching","positionHandler","push","destroyGeolocation","destroy","hasPosition","computed","isHighAccuracy","coordinates","lat","lng","onUnmounted","readonly"],"mappings":";;;;;;;;;;;;AA2EO,SAASA,cAAAA,GAAiB;AAC/B,EAAA,MAAMC,QAAAA,GAAWC,IAA4B,IAAI,CAAA;AACjD,EAAA,MAAMC,QAAAA,GAAWD,IAAmB,IAAI,CAAA;AACxC,EAAA,MAAME,SAAAA,GAAYF,IAAmB,IAAI,CAAA;AACzC,EAAA,MAAMG,QAAAA,GAAWH,IAAmB,IAAI,CAAA;AACxC,EAAA,MAAMI,QAAAA,GAAWJ,IAAmB,IAAI,CAAA;AACxC,EAAA,MAAMK,OAAAA,GAAUL,IAAmB,IAAI,CAAA;AACvC,EAAA,MAAMM,KAAAA,GAAQN,IAAmB,IAAI,CAAA;AACrC,EAAA,MAAMO,KAAAA,GAAQP,IAAmB,IAAI,CAAA;AACrC,EAAA,MAAMQ,WAAAA,GAAcR,IAAI,KAAK,CAAA;AAC7B,EAAA,MAAMS,QAAAA,GAAWT,IAAI,KAAK,CAAA;AAC1B,EAAA,MAAMU,UAAAA,GAAaV,IAAI,KAAK,CAAA;AAC5B,EAAA,MAAMW,SAAAA,GAAYX,IAAI,KAAK,CAAA;AAE3B,EAAA,IAAIY,QAAAA,GAAkC,IAAA;AACtC,EAAA,IAAIC,iBAAAA,GAA8C,IAAA;AAClD,EAAA,IAAIC,mBAAsC,EAAA;AAK1C,EAAA,MAAMC,cAAAA,GAAiBA,CAACC,GAAAA,KAAyB;AAC/CjB,IAAAA,QAAAA,CAASkB,KAAAA,GAAQD,GAAAA;AACjBf,IAAAA,QAAAA,CAASgB,QAAQD,GAAAA,CAAIf,QAAAA;AACrBC,IAAAA,SAAAA,CAAUe,QAAQD,GAAAA,CAAId,SAAAA;AACtBC,IAAAA,QAAAA,CAASc,QAAQD,GAAAA,CAAIb,QAAAA;AACrBC,IAAAA,QAAAA,CAASa,KAAAA,GAAQD,IAAIZ,QAAAA,IAAY,IAAA;AACjCC,IAAAA,OAAAA,CAAQY,KAAAA,GAAQD,IAAIX,OAAAA,IAAW,IAAA;AAC/BC,IAAAA,KAAAA,CAAMW,KAAAA,GAAQD,IAAIV,KAAAA,IAAS,IAAA;AAC3BC,IAAAA,KAAAA,CAAMU,KAAAA,GAAQ,IAAA;AAAA,EAChB,CAAA;AAKA,EAAA,MAAMC,aAAa,YAAY;AAC7B,IAAA,IAAI,CAACN,QAAAA,EAAU;AACbA,MAAAA,QAAAA,GAAW,IAAIO,cAAAA,EAAe;AAAA,IAChC;AAEA,IAAA,IAAI;AACFN,MAAAA,iBAAAA,GAAoB,MAAMD,QAAAA,CAASM,UAAAA,CAA8B,aAAa,CAAA;AAC9E,MAAA,IAAIL,iBAAAA,IAAqB,OAAOA,iBAAAA,CAAkBL,WAAAA,KAAgB,UAAA,EAAY;AAC5EA,QAAAA,WAAAA,CAAYS,KAAAA,GAAQJ,kBAAkBL,WAAAA,EAAY;AAClDC,QAAAA,QAAAA,CAASQ,KAAAA,GAAQ,IAAA;AACjBV,QAAAA,KAAAA,CAAMU,KAAAA,GAAQ,IAAA;AAAA,MAChB;AAAA,IACF,SACOG,GAAAA,EAAK;AACVb,MAAAA,KAAAA,CAAMU,KAAAA,GAAQG,GAAAA,YAAeC,KAAAA,GAAQD,GAAAA,CAAIE,OAAAA,GAAU,mCAAA;AACnDC,MAAAA,OAAAA,CAAQC,IAAAA,CAAK,sCAAsCJ,GAAG,CAAA;AACtD,MAAA,MAAMA,GAAAA;AAAAA,IACR;AAAA,EACF,CAAA;AAKA,EAAA,MAAMK,eAAe,YAAY;AAC/B,IAAA,IAAI,CAACZ,iBAAAA,IAAqB,CAACH,UAAAA,CAAWO,KAAAA,EACpC;AAEF,IAAA,IAAI;AACF,MAAA,IAAIJ,iBAAAA,IAAqB,OAAOA,iBAAAA,CAAkBY,YAAAA,KAAiB,UAAA,EAAY;AAC7EZ,QAAAA,iBAAAA,CAAkBY,YAAAA,EAAa;AAC/Bf,QAAAA,UAAAA,CAAWO,KAAAA,GAAQ,KAAA;AAAA,MACrB;AAAA,IACF,SACOG,GAAAA,EAAK;AACVb,MAAAA,KAAAA,CAAMU,KAAAA,GAAQG,GAAAA,YAAeC,KAAAA,GAAQD,GAAAA,CAAIE,OAAAA,GAAU,kCAAA;AACnD,MAAA,MAAMF,GAAAA;AAAAA,IACR;AAAA,EACF,CAAA;AAKA,EAAA,MAAMM,eAAe,YAAY;AAE/B,IAAA,IAAIhB,WAAWO,KAAAA,EAAO;AACpB,MAAA,MAAMQ,YAAAA,EAAa;AAAA,IACrB;AAGAX,IAAAA,gBAAAA,CAAiBa,OAAAA,CAAQC,CAAAA,OAAAA,KAAWA,OAAAA,EAAS,CAAA;AAC7Cd,IAAAA,gBAAAA,GAAmB,EAAA;AAEnB,IAAA,IAAIF,QAAAA,EAAU;AACZ,MAAA,MAAMA,QAAAA,CAASc,aAAa,aAAa,CAAA;AACzCb,MAAAA,iBAAAA,GAAoB,IAAA;AACpBd,MAAAA,QAAAA,CAASkB,KAAAA,GAAQ,IAAA;AACjBhB,MAAAA,QAAAA,CAASgB,KAAAA,GAAQ,IAAA;AACjBf,MAAAA,SAAAA,CAAUe,KAAAA,GAAQ,IAAA;AAClBd,MAAAA,QAAAA,CAASc,KAAAA,GAAQ,IAAA;AACjBb,MAAAA,QAAAA,CAASa,KAAAA,GAAQ,IAAA;AACjBZ,MAAAA,OAAAA,CAAQY,KAAAA,GAAQ,IAAA;AAChBX,MAAAA,KAAAA,CAAMW,KAAAA,GAAQ,IAAA;AACdR,MAAAA,QAAAA,CAASQ,KAAAA,GAAQ,KAAA;AACjBV,MAAAA,KAAAA,CAAMU,KAAAA,GAAQ,IAAA;AAAA,IAChB;AAAA,EACF,CAAA;AAKA,EAAA,MAAMY,kBAAAA,GAAqB,OAAOC,OAAAA,KAA8B;AAC9D,IAAA,IAAI,CAACjB,iBAAAA,EAAmB;AACtB,MAAA,MAAMK,UAAAA,EAAW;AAAA,IACnB;AAEAP,IAAAA,SAAAA,CAAUM,KAAAA,GAAQ,IAAA;AAClB,IAAA,IAAI;AACF,MAAA,IAAI,CAACT,YAAYS,KAAAA,EAAO;AACtB,QAAA,MAAMG,GAAAA,GAAM,IAAIC,KAAAA,CAAM,8BAA8B,CAAA;AACpDd,QAAAA,KAAAA,CAAMU,QAAQG,GAAAA,CAAIE,OAAAA;AAClB,QAAA,MAAMF,GAAAA;AAAAA,MACR;AAEA,MAAA,IAAIP,iBAAAA,IAAqB,OAAOA,iBAAAA,CAAkBgB,kBAAAA,KAAuB,UAAA,EAAY;AACnF,QAAA,MAAMb,GAAAA,GAAM,MAAMH,iBAAAA,CAAkBgB,kBAAAA,CAAmBC,OAAO,CAAA;AAC9Df,QAAAA,cAAAA,CAAeC,GAAG,CAAA;AAAA,MACpB;AAAA,IACF,SACOI,GAAAA,EAAK;AACVb,MAAAA,KAAAA,CAAMU,KAAAA,GAAQG,GAAAA,YAAeC,KAAAA,GAAQD,GAAAA,CAAIE,OAAAA,GAAU,gCAAA;AACnD,MAAA,MAAMF,GAAAA;AAAAA,IACR,CAAA,SAAC;AAECT,MAAAA,SAAAA,CAAUM,KAAAA,GAAQ,KAAA;AAAA,IACpB;AAAA,EACF,CAAA;AAKA,EAAA,MAAMc,gBAAgB,YAAY;AAChC,IAAA,IAAI,CAAClB,iBAAAA,IAAqBH,UAAAA,CAAWO,KAAAA,EAAO;AAC1C,MAAA,IAAI,CAACJ,iBAAAA,EAAmB;AACtB,QAAA,MAAMK,UAAAA,EAAW;AAAA,MACnB;AACA,MAAA,IAAIR,WAAWO,KAAAA,EACb;AAAA,IACJ;AAEA,IAAA,IAAI,CAACT,YAAYS,KAAAA,EAAO;AACtB,MAAA,MAAM,IAAII,MAAM,8BAA8B,CAAA;AAAA,IAChD;AAEA,IAAA,IAAI;AACF,MAAA,IAAIR,iBAAAA,IAAqB,OAAOA,iBAAAA,CAAkBkB,aAAAA,KAAkB,UAAA,EAAY;AAC9E,QAAA,MAAMC,eAAAA,GAAkBA,CAAChB,GAAAA,KAAyB;AAChDD,UAAAA,cAAAA,CAAeC,GAAG,CAAA;AAAA,QACpB,CAAA;AAEAH,QAAAA,iBAAAA,CAAkBkB,cAAcC,eAAe,CAAA;AAC/CtB,QAAAA,UAAAA,CAAWO,KAAAA,GAAQ,IAAA;AACnBV,QAAAA,KAAAA,CAAMU,KAAAA,GAAQ,IAAA;AAGdH,QAAAA,gBAAAA,CAAiBmB,KAAK,MAAM;AAC1B,UAAA,IAAIpB,iBAAAA,IAAqB,OAAOA,iBAAAA,CAAkBY,YAAAA,KAAiB,UAAA,EAAY;AAC7EZ,YAAAA,iBAAAA,CAAkBY,YAAAA,EAAa;AAAA,UACjC;AAAA,QACF,CAAC,CAAA;AAAA,MACH;AAAA,IACF,SACOL,GAAAA,EAAK;AACVb,MAAAA,KAAAA,CAAMU,KAAAA,GAAQG,GAAAA,YAAeC,KAAAA,GAAQD,GAAAA,CAAIE,OAAAA,GAAU,mCAAA;AACnD,MAAA,MAAMF,GAAAA;AAAAA,IACR;AAAA,EACF,CAAA;AAKA,EAAA,MAAMc,qBAAqB,YAAY;AACrC,IAAA,MAAMR,YAAAA,EAAa;AACnB,IAAA,IAAId,QAAAA,EAAU;AACZ,MAAA,MAAMA,SAASuB,OAAAA,EAAQ;AACvBvB,MAAAA,QAAAA,GAAW,IAAA;AAAA,IACb;AAAA,EACF,CAAA;AAGA,EAAA,MAAMwB,WAAAA,GAAcC,QAAAA,CAAS,MAAMtC,QAAAA,CAASkB,UAAU,IAAI,CAAA;AAC1D,EAAA,MAAMqB,iBAAiBD,QAAAA,CAAS,MAAA,CAAOlC,QAAAA,CAASc,KAAAA,IAAS,KAAK,GAAG,CAAA;AACjE,EAAA,MAAMsB,WAAAA,GAAcF,SAAS,MAAM;AACjC,IAAA,IAAI,CAACpC,QAAAA,CAASgB,KAAAA,IAAS,CAACf,SAAAA,CAAUe,OAChC,OAAO,IAAA;AACT,IAAA,OAAO;AAAA,MACLuB,KAAKvC,QAAAA,CAASgB,KAAAA;AAAAA,MACdwB,KAAKvC,SAAAA,CAAUe;AAAAA,KACjB;AAAA,EACF,CAAC,CAAA;AAEDyB,EAAAA,WAAAA,CAAY,MAAM;AAChBR,IAAAA,kBAAAA,EAAmB;AAAA,EACrB,CAAC,CAAA;AAED,EAAA,OAAO;AAAA,IACLnC,QAAAA,EAAU4C,SAAS5C,QAAQ,CAAA;AAAA,IAC3BE,QAAAA,EAAU0C,SAAS1C,QAAQ,CAAA;AAAA,IAC3BC,SAAAA,EAAWyC,SAASzC,SAAS,CAAA;AAAA,IAC7BC,QAAAA,EAAUwC,SAASxC,QAAQ,CAAA;AAAA,IAC3BC,QAAAA,EAAUuC,SAASvC,QAAQ,CAAA;AAAA,IAC3BC,OAAAA,EAASsC,SAAStC,OAAO,CAAA;AAAA,IACzBC,KAAAA,EAAOqC,SAASrC,KAAK,CAAA;AAAA,IACrBC,KAAAA,EAAOoC,SAASpC,KAAK,CAAA;AAAA,IACrBC,WAAAA,EAAamC,SAASnC,WAAW,CAAA;AAAA,IACjCE,UAAAA,EAAYiC,SAASjC,UAAU,CAAA;AAAA,IAC/BD,QAAAA,EAAUkC,SAASlC,QAAQ,CAAA;AAAA,IAC3BE,SAAAA,EAAWgC,SAAShC,SAAS,CAAA;AAAA,IAC7ByB,WAAAA;AAAAA,IACAE,cAAAA;AAAAA,IACAC,WAAAA;AAAAA,IACArB,UAAAA;AAAAA,IACAQ,YAAAA;AAAAA,IACAG,kBAAAA;AAAAA,IACAE,aAAAA;AAAAA,IACAN;AAAAA,GACF;AACF;;;;;;;"}